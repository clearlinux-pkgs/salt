Pulled from changes in https://github.com/saltstack/salt/pull/57571,
removing the parts patching darwin.txt files, since those changes are
not needed for Clear, and they did not apply cleanly on top of the v3001
release.


From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Fri, 5 Jun 2020 12:29:31 -0700
Subject: [PATCH] remove < 1.0.0

---
 requirements/base.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/requirements/base.txt b/requirements/base.txt
index 27923c0..56d9131 100644
--- a/requirements/base.txt
+++ b/requirements/base.txt
@@ -1,5 +1,5 @@
 Jinja2
-msgpack>=0.5,!=0.5.5,<1.0.0
+msgpack>=0.5,!=0.5.5
 PyYAML
 MarkupSafe
 requests>=1.0.0

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Wed, 10 Jun 2020 17:28:51 -0600
Subject: [PATCH] update msgpack

---
 pkg/osx/req.txt                       | 2 +-
 requirements/static/py3.5/freebsd.txt | 2 +-
 requirements/static/py3.5/linux.txt   | 2 +-
 requirements/static/py3.5/windows.txt | 2 +-
 requirements/static/py3.6/freebsd.txt | 2 +-
 requirements/static/py3.6/linux.txt   | 2 +-
 requirements/static/py3.6/windows.txt | 2 +-
 requirements/static/py3.7/freebsd.txt | 2 +-
 requirements/static/py3.7/linux.txt   | 2 +-
 requirements/static/py3.7/windows.txt | 2 +-
 requirements/static/py3.8/freebsd.txt | 2 +-
 requirements/static/py3.8/linux.txt   | 2 +-
 requirements/static/py3.9/freebsd.txt | 2 +-
 requirements/static/py3.9/linux.txt   | 2 +-
 14 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/pkg/osx/req.txt b/pkg/osx/req.txt
index 6d56906..9dd5358 100644
--- a/pkg/osx/req.txt
+++ b/pkg/osx/req.txt
@@ -13,7 +13,7 @@ jinja2==2.10.1
 linode-python==1.1.1
 Mako==1.0.7
 markupsafe==1.1.1
-msgpack==0.5.6
+msgpack==1.0.0
 psutil==5.6.6
 pyasn1==0.4.8
 pycparser==2.19
diff --git a/requirements/static/py3.5/freebsd.txt b/requirements/static/py3.5/freebsd.txt
index 6aa4647..c21e40b 100644
--- a/requirements/static/py3.5/freebsd.txt
+++ b/requirements/static/py3.5/freebsd.txt
@@ -63,7 +63,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 ncclient==0.6.4           # via junos-eznc
 netaddr==0.7.19           # via junos-eznc
 ntc-templates==1.4.0      # via junos-eznc
diff --git a/requirements/static/py3.5/linux.txt b/requirements/static/py3.5/linux.txt
index 5ae2b5a..100ccc5 100644
--- a/requirements/static/py3.5/linux.txt
+++ b/requirements/static/py3.5/linux.txt
@@ -149,7 +149,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 msrest==0.6.14            # via azure-applicationinsights, azure-eventgrid, azure-keyvault, azure-loganalytics, azure-mgmt-cdn, azure-mgmt-compute, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-dns, azure-mgmt-eventhub, azure-mgmt-keyvault, azure-mgmt-media, azure-mgmt-network, azure-mgmt-rdbms, azure-mgmt-resource, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-servicefabric, msrestazure
 msrestazure==0.6.3        # via azure-batch, azure-eventgrid, azure-graphrbac, azure-keyvault, azure-mgmt-advisor, azure-mgmt-applicationinsights, azure-mgmt-authorization, azure-mgmt-batch, azure-mgmt-batchai, azure-mgmt-billing, azure-mgmt-cdn, azure-mgmt-cognitiveservices, azure-mgmt-commerce, azure-mgmt-compute, azure-mgmt-consumption, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-cosmosdb, azure-mgmt-datafactory, azure-mgmt-datalake-analytics, azure-mgmt-datalake-store, azure-mgmt-datamigration, azure-mgmt-devspaces, azure-mgmt-devtestlabs, azure-mgmt-dns, azure-mgmt-eventgrid, azure-mgmt-eventhub, azure-mgmt-hanaonazure, azure-mgmt-iotcentral, azure-mgmt-iothub, azure-mgmt-iothubprovisioningservices, azure-mgmt-keyvault, azure-mgmt-loganalytics, azure-mgmt-logic, azure-mgmt-machinelearningcompute, azure-mgmt-managementgroups, azure-mgmt-managementpartner, azure-mgmt-maps, azure-mgmt-marketplaceordering, azure-mgmt-media, azure-mgmt-monitor, azure-mgmt-msi, azure-mgmt-network, azure-mgmt-notificationhubs, azure-mgmt-policyinsights, azure-mgmt-powerbiembedded, azure-mgmt-rdbms, azure-mgmt-recoveryservices, azure-mgmt-recoveryservicesbackup, azure-mgmt-redis, azure-mgmt-relay, azure-mgmt-reservations, azure-mgmt-resource, azure-mgmt-scheduler, azure-mgmt-search, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-mgmt-sql, azure-mgmt-storage, azure-mgmt-subscription, azure-mgmt-trafficmanager, azure-mgmt-web
 ncclient==0.6.4           # via junos-eznc
diff --git a/requirements/static/py3.5/windows.txt b/requirements/static/py3.5/windows.txt
index 95e5598..d729952 100644
--- a/requirements/static/py3.5/windows.txt
+++ b/requirements/static/py3.5/windows.txt
@@ -63,7 +63,7 @@ mock==3.0.5 ; python_version < "3.6"
 more-itertools==5.0.0
 moto==1.3.7
 msgpack-python==0.5.6
-msgpack==0.5.6
+msgpack==1.0.0
 packaging==19.2           # via pytest
 patch==1.16
 pathlib2==2.3.3           # via pytest
diff --git a/requirements/static/py3.6/freebsd.txt b/requirements/static/py3.6/freebsd.txt
index 91881c7..08e13d3 100644
--- a/requirements/static/py3.6/freebsd.txt
+++ b/requirements/static/py3.6/freebsd.txt
@@ -63,7 +63,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 ncclient==0.6.4           # via junos-eznc
 netaddr==0.7.19           # via junos-eznc
 ntc-templates==1.4.0      # via junos-eznc
diff --git a/requirements/static/py3.6/linux.txt b/requirements/static/py3.6/linux.txt
index 87b45c6..7fc2ba4 100644
--- a/requirements/static/py3.6/linux.txt
+++ b/requirements/static/py3.6/linux.txt
@@ -149,7 +149,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 msrest==0.6.14            # via azure-applicationinsights, azure-eventgrid, azure-keyvault, azure-loganalytics, azure-mgmt-cdn, azure-mgmt-compute, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-dns, azure-mgmt-eventhub, azure-mgmt-keyvault, azure-mgmt-media, azure-mgmt-network, azure-mgmt-rdbms, azure-mgmt-resource, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-servicefabric, msrestazure
 msrestazure==0.6.3        # via azure-batch, azure-eventgrid, azure-graphrbac, azure-keyvault, azure-mgmt-advisor, azure-mgmt-applicationinsights, azure-mgmt-authorization, azure-mgmt-batch, azure-mgmt-batchai, azure-mgmt-billing, azure-mgmt-cdn, azure-mgmt-cognitiveservices, azure-mgmt-commerce, azure-mgmt-compute, azure-mgmt-consumption, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-cosmosdb, azure-mgmt-datafactory, azure-mgmt-datalake-analytics, azure-mgmt-datalake-store, azure-mgmt-datamigration, azure-mgmt-devspaces, azure-mgmt-devtestlabs, azure-mgmt-dns, azure-mgmt-eventgrid, azure-mgmt-eventhub, azure-mgmt-hanaonazure, azure-mgmt-iotcentral, azure-mgmt-iothub, azure-mgmt-iothubprovisioningservices, azure-mgmt-keyvault, azure-mgmt-loganalytics, azure-mgmt-logic, azure-mgmt-machinelearningcompute, azure-mgmt-managementgroups, azure-mgmt-managementpartner, azure-mgmt-maps, azure-mgmt-marketplaceordering, azure-mgmt-media, azure-mgmt-monitor, azure-mgmt-msi, azure-mgmt-network, azure-mgmt-notificationhubs, azure-mgmt-policyinsights, azure-mgmt-powerbiembedded, azure-mgmt-rdbms, azure-mgmt-recoveryservices, azure-mgmt-recoveryservicesbackup, azure-mgmt-redis, azure-mgmt-relay, azure-mgmt-reservations, azure-mgmt-resource, azure-mgmt-scheduler, azure-mgmt-search, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-mgmt-sql, azure-mgmt-storage, azure-mgmt-subscription, azure-mgmt-trafficmanager, azure-mgmt-web
 ncclient==0.6.4           # via junos-eznc
diff --git a/requirements/static/py3.6/windows.txt b/requirements/static/py3.6/windows.txt
index ced28fb..e9825a3 100644
--- a/requirements/static/py3.6/windows.txt
+++ b/requirements/static/py3.6/windows.txt
@@ -63,7 +63,7 @@ mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
 msgpack-python==0.5.6
-msgpack==0.5.6
+msgpack==1.0.0
 packaging==19.2           # via pytest
 patch==1.16
 pathtools==0.1.2          # via watchdog
diff --git a/requirements/static/py3.7/freebsd.txt b/requirements/static/py3.7/freebsd.txt
index cf6085e..4575b9a 100644
--- a/requirements/static/py3.7/freebsd.txt
+++ b/requirements/static/py3.7/freebsd.txt
@@ -62,7 +62,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 ncclient==0.6.4           # via junos-eznc
 netaddr==0.7.19           # via junos-eznc
 ntc-templates==1.4.0      # via junos-eznc
diff --git a/requirements/static/py3.7/linux.txt b/requirements/static/py3.7/linux.txt
index 702b69d..75b0b11 100644
--- a/requirements/static/py3.7/linux.txt
+++ b/requirements/static/py3.7/linux.txt
@@ -148,7 +148,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 msrest==0.6.14            # via azure-applicationinsights, azure-eventgrid, azure-keyvault, azure-loganalytics, azure-mgmt-cdn, azure-mgmt-compute, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-dns, azure-mgmt-eventhub, azure-mgmt-keyvault, azure-mgmt-media, azure-mgmt-network, azure-mgmt-rdbms, azure-mgmt-resource, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-servicefabric, msrestazure
 msrestazure==0.6.3        # via azure-batch, azure-eventgrid, azure-graphrbac, azure-keyvault, azure-mgmt-advisor, azure-mgmt-applicationinsights, azure-mgmt-authorization, azure-mgmt-batch, azure-mgmt-batchai, azure-mgmt-billing, azure-mgmt-cdn, azure-mgmt-cognitiveservices, azure-mgmt-commerce, azure-mgmt-compute, azure-mgmt-consumption, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-cosmosdb, azure-mgmt-datafactory, azure-mgmt-datalake-analytics, azure-mgmt-datalake-store, azure-mgmt-datamigration, azure-mgmt-devspaces, azure-mgmt-devtestlabs, azure-mgmt-dns, azure-mgmt-eventgrid, azure-mgmt-eventhub, azure-mgmt-hanaonazure, azure-mgmt-iotcentral, azure-mgmt-iothub, azure-mgmt-iothubprovisioningservices, azure-mgmt-keyvault, azure-mgmt-loganalytics, azure-mgmt-logic, azure-mgmt-machinelearningcompute, azure-mgmt-managementgroups, azure-mgmt-managementpartner, azure-mgmt-maps, azure-mgmt-marketplaceordering, azure-mgmt-media, azure-mgmt-monitor, azure-mgmt-msi, azure-mgmt-network, azure-mgmt-notificationhubs, azure-mgmt-policyinsights, azure-mgmt-powerbiembedded, azure-mgmt-rdbms, azure-mgmt-recoveryservices, azure-mgmt-recoveryservicesbackup, azure-mgmt-redis, azure-mgmt-relay, azure-mgmt-reservations, azure-mgmt-resource, azure-mgmt-scheduler, azure-mgmt-search, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-mgmt-sql, azure-mgmt-storage, azure-mgmt-subscription, azure-mgmt-trafficmanager, azure-mgmt-web
 ncclient==0.6.4           # via junos-eznc
diff --git a/requirements/static/py3.7/windows.txt b/requirements/static/py3.7/windows.txt
index ecbe7bf..937e736 100644
--- a/requirements/static/py3.7/windows.txt
+++ b/requirements/static/py3.7/windows.txt
@@ -61,7 +61,7 @@ mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
 msgpack-python==0.5.6
-msgpack==0.5.6
+msgpack==1.0.0
 packaging==19.2           # via pytest
 patch==1.16
 pathtools==0.1.2          # via watchdog
diff --git a/requirements/static/py3.8/freebsd.txt b/requirements/static/py3.8/freebsd.txt
index 247a1eb..9e0a8f6 100644
--- a/requirements/static/py3.8/freebsd.txt
+++ b/requirements/static/py3.8/freebsd.txt
@@ -61,7 +61,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 ncclient==0.6.4           # via junos-eznc
 netaddr==0.7.19           # via junos-eznc
 ntc-templates==1.4.1      # via junos-eznc
diff --git a/requirements/static/py3.8/linux.txt b/requirements/static/py3.8/linux.txt
index 5133c7f..8dab25f 100644
--- a/requirements/static/py3.8/linux.txt
+++ b/requirements/static/py3.8/linux.txt
@@ -148,7 +148,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 msrest==0.6.14            # via azure-applicationinsights, azure-eventgrid, azure-keyvault, azure-loganalytics, azure-mgmt-cdn, azure-mgmt-compute, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-dns, azure-mgmt-eventhub, azure-mgmt-keyvault, azure-mgmt-media, azure-mgmt-network, azure-mgmt-rdbms, azure-mgmt-resource, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-servicefabric, msrestazure
 msrestazure==0.6.3        # via azure-batch, azure-eventgrid, azure-graphrbac, azure-keyvault, azure-mgmt-advisor, azure-mgmt-applicationinsights, azure-mgmt-authorization, azure-mgmt-batch, azure-mgmt-batchai, azure-mgmt-billing, azure-mgmt-cdn, azure-mgmt-cognitiveservices, azure-mgmt-commerce, azure-mgmt-compute, azure-mgmt-consumption, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-cosmosdb, azure-mgmt-datafactory, azure-mgmt-datalake-analytics, azure-mgmt-datalake-store, azure-mgmt-datamigration, azure-mgmt-devspaces, azure-mgmt-devtestlabs, azure-mgmt-dns, azure-mgmt-eventgrid, azure-mgmt-eventhub, azure-mgmt-hanaonazure, azure-mgmt-iotcentral, azure-mgmt-iothub, azure-mgmt-iothubprovisioningservices, azure-mgmt-keyvault, azure-mgmt-loganalytics, azure-mgmt-logic, azure-mgmt-machinelearningcompute, azure-mgmt-managementgroups, azure-mgmt-managementpartner, azure-mgmt-maps, azure-mgmt-marketplaceordering, azure-mgmt-media, azure-mgmt-monitor, azure-mgmt-msi, azure-mgmt-network, azure-mgmt-notificationhubs, azure-mgmt-policyinsights, azure-mgmt-powerbiembedded, azure-mgmt-rdbms, azure-mgmt-recoveryservices, azure-mgmt-recoveryservicesbackup, azure-mgmt-redis, azure-mgmt-relay, azure-mgmt-reservations, azure-mgmt-resource, azure-mgmt-scheduler, azure-mgmt-search, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-mgmt-sql, azure-mgmt-storage, azure-mgmt-subscription, azure-mgmt-trafficmanager, azure-mgmt-web
 ncclient==0.6.4           # via junos-eznc
diff --git a/requirements/static/py3.9/freebsd.txt b/requirements/static/py3.9/freebsd.txt
index ee4e704..4e66d71 100644
--- a/requirements/static/py3.9/freebsd.txt
+++ b/requirements/static/py3.9/freebsd.txt
@@ -61,7 +61,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 ncclient==0.6.4           # via junos-eznc
 netaddr==0.7.19           # via junos-eznc
 ntc-templates==1.4.1      # via junos-eznc
diff --git a/requirements/static/py3.9/linux.txt b/requirements/static/py3.9/linux.txt
index d1f4c2c..286b95f 100644
--- a/requirements/static/py3.9/linux.txt
+++ b/requirements/static/py3.9/linux.txt
@@ -148,7 +148,7 @@ markupsafe==1.1.1
 mock==3.0.5
 more-itertools==5.0.0
 moto==1.3.7
-msgpack==0.5.6
+msgpack==1.0.0
 msrest==0.6.14            # via azure-applicationinsights, azure-eventgrid, azure-keyvault, azure-loganalytics, azure-mgmt-cdn, azure-mgmt-compute, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-dns, azure-mgmt-eventhub, azure-mgmt-keyvault, azure-mgmt-media, azure-mgmt-network, azure-mgmt-rdbms, azure-mgmt-resource, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-servicefabric, msrestazure
 msrestazure==0.6.3        # via azure-batch, azure-eventgrid, azure-graphrbac, azure-keyvault, azure-mgmt-advisor, azure-mgmt-applicationinsights, azure-mgmt-authorization, azure-mgmt-batch, azure-mgmt-batchai, azure-mgmt-billing, azure-mgmt-cdn, azure-mgmt-cognitiveservices, azure-mgmt-commerce, azure-mgmt-compute, azure-mgmt-consumption, azure-mgmt-containerinstance, azure-mgmt-containerregistry, azure-mgmt-containerservice, azure-mgmt-cosmosdb, azure-mgmt-datafactory, azure-mgmt-datalake-analytics, azure-mgmt-datalake-store, azure-mgmt-datamigration, azure-mgmt-devspaces, azure-mgmt-devtestlabs, azure-mgmt-dns, azure-mgmt-eventgrid, azure-mgmt-eventhub, azure-mgmt-hanaonazure, azure-mgmt-iotcentral, azure-mgmt-iothub, azure-mgmt-iothubprovisioningservices, azure-mgmt-keyvault, azure-mgmt-loganalytics, azure-mgmt-logic, azure-mgmt-machinelearningcompute, azure-mgmt-managementgroups, azure-mgmt-managementpartner, azure-mgmt-maps, azure-mgmt-marketplaceordering, azure-mgmt-media, azure-mgmt-monitor, azure-mgmt-msi, azure-mgmt-network, azure-mgmt-notificationhubs, azure-mgmt-policyinsights, azure-mgmt-powerbiembedded, azure-mgmt-rdbms, azure-mgmt-recoveryservices, azure-mgmt-recoveryservicesbackup, azure-mgmt-redis, azure-mgmt-relay, azure-mgmt-reservations, azure-mgmt-resource, azure-mgmt-scheduler, azure-mgmt-search, azure-mgmt-servicebus, azure-mgmt-servicefabric, azure-mgmt-signalr, azure-mgmt-sql, azure-mgmt-storage, azure-mgmt-subscription, azure-mgmt-trafficmanager, azure-mgmt-web
 ncclient==0.6.4           # via junos-eznc

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Mon, 15 Jun 2020 13:52:15 -0600
Subject: [PATCH] fix msg_test

---
 salt/serializers/msgpack.py | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/salt/serializers/msgpack.py b/salt/serializers/msgpack.py
index 321f620..cd54f7f 100644
--- a/salt/serializers/msgpack.py
+++ b/salt/serializers/msgpack.py
@@ -35,6 +35,25 @@ if not available:
         _fail()
 
 
+elif salt.utils.msgpack.version >= (1, 0, 0):
+
+    def _serialize(obj, **options):
+        try:
+            return salt.utils.msgpack.dumps(obj, **options)
+        except Exception as error:  # pylint: disable=broad-except
+            raise SerializationError(error)
+
+    def _deserialize(stream_or_string, **options):
+        try:
+            options.setdefault("use_list", True)
+            options.setdefault("raw", False)
+            if "encoding" in options:
+                del options["encoding"]
+            return salt.utils.msgpack.loads(stream_or_string, **options)
+        except Exception as error:  # pylint: disable=broad-except
+            raise DeserializationError(error)
+
+
 elif salt.utils.msgpack.version >= (0, 2, 0):
 
     def _serialize(obj, **options):

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Mon, 15 Jun 2020 18:43:57 -0600
Subject: [PATCH] fix .decode

---
 salt/serializers/msgpack.py      | 19 -------------------
 salt/utils/msgpack.py            |  6 +++---
 tests/unit/utils/test_msgpack.py | 31 ++++++++++++++++---------------
 3 files changed, 19 insertions(+), 37 deletions(-)

diff --git a/salt/serializers/msgpack.py b/salt/serializers/msgpack.py
index cd54f7f..321f620 100644
--- a/salt/serializers/msgpack.py
+++ b/salt/serializers/msgpack.py
@@ -35,25 +35,6 @@ if not available:
         _fail()
 
 
-elif salt.utils.msgpack.version >= (1, 0, 0):
-
-    def _serialize(obj, **options):
-        try:
-            return salt.utils.msgpack.dumps(obj, **options)
-        except Exception as error:  # pylint: disable=broad-except
-            raise SerializationError(error)
-
-    def _deserialize(stream_or_string, **options):
-        try:
-            options.setdefault("use_list", True)
-            options.setdefault("raw", False)
-            if "encoding" in options:
-                del options["encoding"]
-            return salt.utils.msgpack.loads(stream_or_string, **options)
-        except Exception as error:  # pylint: disable=broad-except
-            raise DeserializationError(error)
-
-
 elif salt.utils.msgpack.version >= (0, 2, 0):
 
     def _serialize(obj, **options):
diff --git a/salt/utils/msgpack.py b/salt/utils/msgpack.py
index 33d32d2..2e4d1be 100644
--- a/salt/utils/msgpack.py
+++ b/salt/utils/msgpack.py
@@ -82,9 +82,9 @@ def _sanitize_msgpack_unpack_kwargs(kwargs):
     https://github.com/msgpack/msgpack-python/blob/master/ChangeLog.rst
     """
     assert isinstance(kwargs, dict)
-    if version >= (1, 0, 0) and kwargs.get("raw", None) is None:
-        log.info("adding `raw=True` argument to msgpack call")
-        kwargs["raw"] = True
+    if version >= (1, 0, 0):
+        if "encoding" in kwargs:
+            del kwargs["encoding"]
 
     return _sanitize_msgpack_kwargs(kwargs)
 
diff --git a/tests/unit/utils/test_msgpack.py b/tests/unit/utils/test_msgpack.py
index c12ae7d..0f5ed1b 100644
--- a/tests/unit/utils/test_msgpack.py
+++ b/tests/unit/utils/test_msgpack.py
@@ -231,36 +231,35 @@ class TestMsgpack(TestCase):
         """
         version = salt.utils.msgpack.version
 
-        kwargs = {"strict_map_key": True, "use_bin_type": True}
+        kwargs = {"strict_map_key": True, "use_bin_type": True, "encoding": "utf-8"}
         salt.utils.msgpack.version = (1, 0, 0)
         self.assertEqual(
-            salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs),
-            {"raw": True, "strict_map_key": True, "use_bin_type": True},
+            salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs.copy()),
+            {"strict_map_key": True, "use_bin_type": True},
         )
 
-        kwargs = {"strict_map_key": True, "use_bin_type": True}
         salt.utils.msgpack.version = (0, 6, 0)
         self.assertEqual(
-            salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs),
-            {"strict_map_key": True, "use_bin_type": True},
+            salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs.copy()),
+            {"strict_map_key": True, "use_bin_type": True, "encoding": "utf-8"},
         )
 
-        kwargs = {"strict_map_key": True, "use_bin_type": True}
         salt.utils.msgpack.version = (0, 5, 2)
         self.assertEqual(
-            salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs),
-            {"use_bin_type": True},
+            salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs.copy()),
+            {"use_bin_type": True, "encoding": "utf-8"},
         )
 
-        kwargs = {"strict_map_key": True, "use_bin_type": True}
         salt.utils.msgpack.version = (0, 4, 0)
         self.assertEqual(
-            salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs),
-            {"use_bin_type": True},
+            salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs.copy()),
+            {"use_bin_type": True, "encoding": "utf-8"},
         )
         kwargs = {"strict_map_key": True, "use_bin_type": True}
         salt.utils.msgpack.version = (0, 3, 0)
-        self.assertEqual(salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs), {})
+        self.assertEqual(
+            salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs.copy()), {}
+        )
         salt.utils.msgpack.version = version
 
     def _test_base(self, pack_func, unpack_func):
@@ -286,7 +285,6 @@ class TestMsgpack(TestCase):
         # Sanity check, we are not borking the BytesIO read function
         self.assertNotEqual(BytesIO.read, buffer.read)
         buffer.read = buffer.getvalue
-
         pack_func(data, buffer)
         # Sanity Check
         self.assertTrue(buffer.getvalue())
@@ -295,7 +293,10 @@ class TestMsgpack(TestCase):
 
         # Reverse the packing and the result should be equivalent to the original data
         unpacked = unpack_func(buffer)
-        self.assertEqual(data, unpacked.decode())
+
+        # if isinstance(unpacked, bytes):
+        #    unpacked = unpacked.decode()
+        self.assertEqual(data, unpacked)
 
     def test_buffered_base_pack(self):
         self._test_buffered_base(

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Mon, 15 Jun 2020 18:46:15 -0600
Subject: [PATCH] fix .decode 2

---
 tests/unit/utils/test_msgpack.py | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/tests/unit/utils/test_msgpack.py b/tests/unit/utils/test_msgpack.py
index 0f5ed1b..5865130 100644
--- a/tests/unit/utils/test_msgpack.py
+++ b/tests/unit/utils/test_msgpack.py
@@ -294,8 +294,9 @@ class TestMsgpack(TestCase):
         # Reverse the packing and the result should be equivalent to the original data
         unpacked = unpack_func(buffer)
 
-        # if isinstance(unpacked, bytes):
-        #    unpacked = unpacked.decode()
+        if isinstance(unpacked, bytes):
+            unpacked = unpacked.decode()
+
         self.assertEqual(data, unpacked)
 
     def test_buffered_base_pack(self):

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Tue, 16 Jun 2020 14:24:14 -0600
Subject: [PATCH] fix failing tests

---
 salt/utils/msgpack.py | 1 +
 1 file changed, 1 insertion(+)

diff --git a/salt/utils/msgpack.py b/salt/utils/msgpack.py
index 2e4d1be..ce1a1f2 100644
--- a/salt/utils/msgpack.py
+++ b/salt/utils/msgpack.py
@@ -83,6 +83,7 @@ def _sanitize_msgpack_unpack_kwargs(kwargs):
     """
     assert isinstance(kwargs, dict)
     if version >= (1, 0, 0):
+        kwargs.setdefault("raw", True)
         if "encoding" in kwargs:
             del kwargs["encoding"]
 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Tue, 16 Jun 2020 15:09:04 -0600
Subject: [PATCH] undo decode 2

---
 salt/utils/msgpack.py | 1 -
 1 file changed, 1 deletion(-)

diff --git a/salt/utils/msgpack.py b/salt/utils/msgpack.py
index ce1a1f2..2e4d1be 100644
--- a/salt/utils/msgpack.py
+++ b/salt/utils/msgpack.py
@@ -83,7 +83,6 @@ def _sanitize_msgpack_unpack_kwargs(kwargs):
     """
     assert isinstance(kwargs, dict)
     if version >= (1, 0, 0):
-        kwargs.setdefault("raw", True)
         if "encoding" in kwargs:
             del kwargs["encoding"]
 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Tue, 16 Jun 2020 15:18:20 -0600
Subject: [PATCH] fix strict_map_key

---
 salt/utils/msgpack.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/salt/utils/msgpack.py b/salt/utils/msgpack.py
index 2e4d1be..969ac48 100644
--- a/salt/utils/msgpack.py
+++ b/salt/utils/msgpack.py
@@ -85,7 +85,7 @@ def _sanitize_msgpack_unpack_kwargs(kwargs):
     if version >= (1, 0, 0):
         if "encoding" in kwargs:
             del kwargs["encoding"]
-
+    kwargs.setdefault("strict_map_key", False)
     return _sanitize_msgpack_kwargs(kwargs)
 
 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Tue, 16 Jun 2020 16:22:52 -0600
Subject: [PATCH] fix tab error

---
 salt/utils/msgpack.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/salt/utils/msgpack.py b/salt/utils/msgpack.py
index 969ac48..8e653b8 100644
--- a/salt/utils/msgpack.py
+++ b/salt/utils/msgpack.py
@@ -85,7 +85,7 @@ def _sanitize_msgpack_unpack_kwargs(kwargs):
     if version >= (1, 0, 0):
         if "encoding" in kwargs:
             del kwargs["encoding"]
-    kwargs.setdefault("strict_map_key", False)
+        kwargs.setdefault("strict_map_key", False)
     return _sanitize_msgpack_kwargs(kwargs)
 
 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Wed, 17 Jun 2020 14:14:22 -0600
Subject: [PATCH] add back raw True

---
 salt/utils/msgpack.py | 1 +
 1 file changed, 1 insertion(+)

diff --git a/salt/utils/msgpack.py b/salt/utils/msgpack.py
index 8e653b8..16fe741 100644
--- a/salt/utils/msgpack.py
+++ b/salt/utils/msgpack.py
@@ -83,6 +83,7 @@ def _sanitize_msgpack_unpack_kwargs(kwargs):
     """
     assert isinstance(kwargs, dict)
     if version >= (1, 0, 0):
+        kwargs.setdefault("raw", True)
         if "encoding" in kwargs:
             del kwargs["encoding"]
         kwargs.setdefault("strict_map_key", False)

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Wed, 17 Jun 2020 14:49:37 -0600
Subject: [PATCH] fix upack kwargs

---
 salt/utils/msgpack.py            | 2 +-
 tests/unit/utils/test_msgpack.py | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/salt/utils/msgpack.py b/salt/utils/msgpack.py
index 16fe741..77d7195 100644
--- a/salt/utils/msgpack.py
+++ b/salt/utils/msgpack.py
@@ -84,9 +84,9 @@ def _sanitize_msgpack_unpack_kwargs(kwargs):
     assert isinstance(kwargs, dict)
     if version >= (1, 0, 0):
         kwargs.setdefault("raw", True)
+        kwargs.setdefault("strict_map_key", False)
         if "encoding" in kwargs:
             del kwargs["encoding"]
-        kwargs.setdefault("strict_map_key", False)
     return _sanitize_msgpack_kwargs(kwargs)
 
 
diff --git a/tests/unit/utils/test_msgpack.py b/tests/unit/utils/test_msgpack.py
index 5865130..46d7944 100644
--- a/tests/unit/utils/test_msgpack.py
+++ b/tests/unit/utils/test_msgpack.py
@@ -235,7 +235,7 @@ class TestMsgpack(TestCase):
         salt.utils.msgpack.version = (1, 0, 0)
         self.assertEqual(
             salt.utils.msgpack._sanitize_msgpack_unpack_kwargs(kwargs.copy()),
-            {"strict_map_key": True, "use_bin_type": True},
+            {"raw": True, "strict_map_key": True, "use_bin_type": True},
         )
 
         salt.utils.msgpack.version = (0, 6, 0)

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Wed, 17 Jun 2020 17:08:09 -0600
Subject: [PATCH] add raw false

---
 salt/serializers/msgpack.py | 1 +
 1 file changed, 1 insertion(+)

diff --git a/salt/serializers/msgpack.py b/salt/serializers/msgpack.py
index 321f620..5e6e3cf 100644
--- a/salt/serializers/msgpack.py
+++ b/salt/serializers/msgpack.py
@@ -47,6 +47,7 @@ elif salt.utils.msgpack.version >= (0, 2, 0):
         try:
             options.setdefault("use_list", True)
             options.setdefault("encoding", "utf-8")
+            options.setdefault("raw", False)
             return salt.utils.msgpack.loads(stream_or_string, **options)
         except Exception as error:  # pylint: disable=broad-except
             raise DeserializationError(error)

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Wed, 17 Jun 2020 18:38:21 -0600
Subject: [PATCH] move raw false

---
 salt/serializers/msgpack.py | 1 -
 salt/utils/msgpack.py       | 1 +
 2 files changed, 1 insertion(+), 1 deletion(-)

diff --git a/salt/serializers/msgpack.py b/salt/serializers/msgpack.py
index 5e6e3cf..321f620 100644
--- a/salt/serializers/msgpack.py
+++ b/salt/serializers/msgpack.py
@@ -47,7 +47,6 @@ elif salt.utils.msgpack.version >= (0, 2, 0):
         try:
             options.setdefault("use_list", True)
             options.setdefault("encoding", "utf-8")
-            options.setdefault("raw", False)
             return salt.utils.msgpack.loads(stream_or_string, **options)
         except Exception as error:  # pylint: disable=broad-except
             raise DeserializationError(error)
diff --git a/salt/utils/msgpack.py b/salt/utils/msgpack.py
index 77d7195..f89f290 100644
--- a/salt/utils/msgpack.py
+++ b/salt/utils/msgpack.py
@@ -87,6 +87,7 @@ def _sanitize_msgpack_unpack_kwargs(kwargs):
         kwargs.setdefault("strict_map_key", False)
         if "encoding" in kwargs:
             del kwargs["encoding"]
+            kwargs.setdefault("raw", False)
     return _sanitize_msgpack_kwargs(kwargs)
 
 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Wed, 17 Jun 2020 19:39:43 -0600
Subject: [PATCH] raw=false move

---
 salt/serializers/msgpack.py | 1 +
 salt/utils/msgpack.py       | 1 -
 2 files changed, 1 insertion(+), 1 deletion(-)

diff --git a/salt/serializers/msgpack.py b/salt/serializers/msgpack.py
index 321f620..5e6e3cf 100644
--- a/salt/serializers/msgpack.py
+++ b/salt/serializers/msgpack.py
@@ -47,6 +47,7 @@ elif salt.utils.msgpack.version >= (0, 2, 0):
         try:
             options.setdefault("use_list", True)
             options.setdefault("encoding", "utf-8")
+            options.setdefault("raw", False)
             return salt.utils.msgpack.loads(stream_or_string, **options)
         except Exception as error:  # pylint: disable=broad-except
             raise DeserializationError(error)
diff --git a/salt/utils/msgpack.py b/salt/utils/msgpack.py
index f89f290..77d7195 100644
--- a/salt/utils/msgpack.py
+++ b/salt/utils/msgpack.py
@@ -87,7 +87,6 @@ def _sanitize_msgpack_unpack_kwargs(kwargs):
         kwargs.setdefault("strict_map_key", False)
         if "encoding" in kwargs:
             del kwargs["encoding"]
-            kwargs.setdefault("raw", False)
     return _sanitize_msgpack_kwargs(kwargs)
 
 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cmcmarrow <cmcmarrow@saltstack.com>
Date: Fri, 19 Jun 2020 13:10:40 -0600
Subject: [PATCH] clean up

---
 salt/serializers/msgpack.py | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/salt/serializers/msgpack.py b/salt/serializers/msgpack.py
index 5e6e3cf..c89e00f 100644
--- a/salt/serializers/msgpack.py
+++ b/salt/serializers/msgpack.py
@@ -35,6 +35,23 @@ if not available:
         _fail()
 
 
+elif salt.utils.msgpack.version >= (1, 0, 0):
+
+    def _serialize(obj, **options):
+        try:
+            return salt.utils.msgpack.dumps(obj, **options)
+        except Exception as error:  # pylint: disable=broad-except
+            raise SerializationError(error)
+
+    def _deserialize(stream_or_string, **options):
+        try:
+            options.setdefault("use_list", True)
+            options.setdefault("raw", False)
+            return salt.utils.msgpack.loads(stream_or_string, **options)
+        except Exception as error:  # pylint: disable=broad-except
+            raise DeserializationError(error)
+
+
 elif salt.utils.msgpack.version >= (0, 2, 0):
 
     def _serialize(obj, **options):
@@ -47,7 +64,6 @@ elif salt.utils.msgpack.version >= (0, 2, 0):
         try:
             options.setdefault("use_list", True)
             options.setdefault("encoding", "utf-8")
-            options.setdefault("raw", False)
             return salt.utils.msgpack.loads(stream_or_string, **options)
         except Exception as error:  # pylint: disable=broad-except
             raise DeserializationError(error)
